#-------------------------------------------------------------------------------
# Software License Agreement (BSD License)
#
# Copyright (c) 2014, PÃ©ter Fankhauser, Christian Gehring, Stelian Coros
# All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above
#     copyright notice, this list of conditions and the following
#     disclaimer in the documentation and/or other materials provided
#     with the distribution.
#   * Neither the name of Autonomous Systems Lab nor ETH Zurich
#     nor the names of its contributors may be used to endorse or
#     promote products derived from this software without specific
#     prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#-------------------------------------------------------------------------------

# Author(s): Peter Fankhauser, Christian Gehring
# Date     : Sep 9, 2013

cmake_minimum_required(VERSION 2.8.3)
project(ooqp_eigen_interface)
set(CMAKE_CXX_FLAGS "-fPIC")
add_definitions(-std=c++11)

find_package(Eigen3 REQUIRED)
#find_package(OOQP REQUIRED)
find_package(catkin REQUIRED COMPONENTS
  #ooqp_catkin
)

catkin_package(
  INCLUDE_DIRS
    include
    ${EIGEN3_INCLUDE_DIR}
  LIBRARIES
    ooqpei
  CATKIN_DEPENDS
    #ooqp_catkin
  DEPENDS 
)

include_directories(include)
include_directories(/usr/local/include/ooqp)
include_directories(${EIGEN3_INCLUDE_DIR})
include_directories(${catkin_INCLUDE_DIRS})
#include_directories(${ooqp_catkin_INCLUDE_DIRS}/ooqp_catkin)
set(OOQPEI_LIBS
  ooqpgensparse ooqpsparse ooqpgondzio ooqpbase blas ma27 gfortran
)

add_library(ooqpei 
  src/OoqpEigenInterface.cpp
  src/QuadraticProblemFormulation.cpp
)

target_link_libraries(ooqpei 
  ${catkin_LIBRARIES}
  ${OOQPEI_LIBS}
)

install(TARGETS ooqpei
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
)

install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
)

catkin_add_gtest(test_ooqpei 
  test/test_main.cpp
  test/OoqpEigenInterface_test.cpp
  test/QuadraticProblemFormulation_test.cpp
)
target_link_libraries(test_ooqpei 
  ooqpei
  ${catkin_LIBRARIES}
)
